// Code generated by "stringer -type HeaderType"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[HEADER_FIRST_FEATURE-1]
	_ = x[HEADER_TRACING_DATA-1]
	_ = x[HEADER_BUILD_ID-2]
	_ = x[HEADER_HOSTNAME-3]
	_ = x[HEADER_OSRELEASE-4]
	_ = x[HEADER_VERSION-5]
	_ = x[HEADER_ARCH-6]
	_ = x[HEADER_NRCPUS-7]
	_ = x[HEADER_CPUDESC-8]
	_ = x[HEADER_CPUID-9]
	_ = x[HEADER_TOTAL_MEM-10]
	_ = x[HEADER_CMDLINE-11]
	_ = x[HEADER_EVENT_DESC-12]
	_ = x[HEADER_CPU_TOPOLOGY-13]
	_ = x[HEADER_NUMA_TOPOLOGY-14]
	_ = x[HEADER_BRANCH_STACK-15]
	_ = x[HEADER_PMU_MAPPINGS-16]
	_ = x[HEADER_GROUP_DESC-17]
	_ = x[HEADER_AUXTRACE-18]
	_ = x[HEADER_STAT-19]
	_ = x[HEADER_CACHE-20]
	_ = x[HEADER_SAMPLE_TIME-21]
	_ = x[HEADER_MEM_TOPOLOGY-22]
	_ = x[HEADER_CLOCKID-23]
	_ = x[HEADER_DIR_FORMAT-24]
	_ = x[HEADER_BPF_PROG_INFO-25]
	_ = x[HEADER_BPF_BTF-26]
	_ = x[HEADER_COMPRESSED-27]
	_ = x[HEADER_CPU_PMU_CAPS-28]
	_ = x[HEADER_CLOCK_DATA-29]
	_ = x[HEADER_HYBRID_TOPOLOGY-30]
	_ = x[HEADER_PMU_CAPS-31]
	_ = x[HEADER_LAST_FEATURE-32]
}

const _HeaderType_name = "HEADER_FIRST_FEATUREHEADER_BUILD_IDHEADER_HOSTNAMEHEADER_OSRELEASEHEADER_VERSIONHEADER_ARCHHEADER_NRCPUSHEADER_CPUDESCHEADER_CPUIDHEADER_TOTAL_MEMHEADER_CMDLINEHEADER_EVENT_DESCHEADER_CPU_TOPOLOGYHEADER_NUMA_TOPOLOGYHEADER_BRANCH_STACKHEADER_PMU_MAPPINGSHEADER_GROUP_DESCHEADER_AUXTRACEHEADER_STATHEADER_CACHEHEADER_SAMPLE_TIMEHEADER_MEM_TOPOLOGYHEADER_CLOCKIDHEADER_DIR_FORMATHEADER_BPF_PROG_INFOHEADER_BPF_BTFHEADER_COMPRESSEDHEADER_CPU_PMU_CAPSHEADER_CLOCK_DATAHEADER_HYBRID_TOPOLOGYHEADER_PMU_CAPSHEADER_LAST_FEATURE"

var _HeaderType_index = [...]uint16{0, 20, 35, 50, 66, 80, 91, 104, 118, 130, 146, 160, 177, 196, 216, 235, 254, 271, 286, 297, 309, 327, 346, 360, 377, 397, 411, 428, 447, 464, 486, 501, 520}

func (i HeaderType) String() string {
	i -= 1
	if i >= HeaderType(len(_HeaderType_index)-1) {
		return "HeaderType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _HeaderType_name[_HeaderType_index[i]:_HeaderType_index[i+1]]
}
