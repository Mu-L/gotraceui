// Code generated by "stringer -type HeaderType,RecordType,eventType"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[HEADER_FIRST_FEATURE-1]
	_ = x[HEADER_TRACING_DATA-1]
	_ = x[HEADER_BUILD_ID-2]
	_ = x[HEADER_HOSTNAME-3]
	_ = x[HEADER_OSRELEASE-4]
	_ = x[HEADER_VERSION-5]
	_ = x[HEADER_ARCH-6]
	_ = x[HEADER_NRCPUS-7]
	_ = x[HEADER_CPUDESC-8]
	_ = x[HEADER_CPUID-9]
	_ = x[HEADER_TOTAL_MEM-10]
	_ = x[HEADER_CMDLINE-11]
	_ = x[HEADER_EVENT_DESC-12]
	_ = x[HEADER_CPU_TOPOLOGY-13]
	_ = x[HEADER_NUMA_TOPOLOGY-14]
	_ = x[HEADER_BRANCH_STACK-15]
	_ = x[HEADER_PMU_MAPPINGS-16]
	_ = x[HEADER_GROUP_DESC-17]
	_ = x[HEADER_AUXTRACE-18]
	_ = x[HEADER_STAT-19]
	_ = x[HEADER_CACHE-20]
	_ = x[HEADER_SAMPLE_TIME-21]
	_ = x[HEADER_MEM_TOPOLOGY-22]
	_ = x[HEADER_CLOCKID-23]
	_ = x[HEADER_DIR_FORMAT-24]
	_ = x[HEADER_BPF_PROG_INFO-25]
	_ = x[HEADER_BPF_BTF-26]
	_ = x[HEADER_COMPRESSED-27]
	_ = x[HEADER_CPU_PMU_CAPS-28]
	_ = x[HEADER_CLOCK_DATA-29]
	_ = x[HEADER_HYBRID_TOPOLOGY-30]
	_ = x[HEADER_PMU_CAPS-31]
	_ = x[HEADER_LAST_FEATURE-32]
}

const _HeaderType_name = "HEADER_FIRST_FEATUREHEADER_BUILD_IDHEADER_HOSTNAMEHEADER_OSRELEASEHEADER_VERSIONHEADER_ARCHHEADER_NRCPUSHEADER_CPUDESCHEADER_CPUIDHEADER_TOTAL_MEMHEADER_CMDLINEHEADER_EVENT_DESCHEADER_CPU_TOPOLOGYHEADER_NUMA_TOPOLOGYHEADER_BRANCH_STACKHEADER_PMU_MAPPINGSHEADER_GROUP_DESCHEADER_AUXTRACEHEADER_STATHEADER_CACHEHEADER_SAMPLE_TIMEHEADER_MEM_TOPOLOGYHEADER_CLOCKIDHEADER_DIR_FORMATHEADER_BPF_PROG_INFOHEADER_BPF_BTFHEADER_COMPRESSEDHEADER_CPU_PMU_CAPSHEADER_CLOCK_DATAHEADER_HYBRID_TOPOLOGYHEADER_PMU_CAPSHEADER_LAST_FEATURE"

var _HeaderType_index = [...]uint16{0, 20, 35, 50, 66, 80, 91, 104, 118, 130, 146, 160, 177, 196, 216, 235, 254, 271, 286, 297, 309, 327, 346, 360, 377, 397, 411, 428, 447, 464, 486, 501, 520}

func (i HeaderType) String() string {
	i -= 1
	if i >= HeaderType(len(_HeaderType_index)-1) {
		return "HeaderType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _HeaderType_name[_HeaderType_index[i]:_HeaderType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERF_RECORD_MMAP-1]
	_ = x[PERF_RECORD_LOST-2]
	_ = x[PERF_RECORD_COMM-3]
	_ = x[PERF_RECORD_EXIT-4]
	_ = x[PERF_RECORD_THROTTLE-5]
	_ = x[PERF_RECORD_UNTHROTTLE-6]
	_ = x[PERF_RECORD_FORK-7]
	_ = x[PERF_RECORD_READ-8]
	_ = x[PERF_RECORD_SAMPLE-9]
	_ = x[PERF_RECORD_MMAP2-10]
	_ = x[PERF_RECORD_AUX-11]
	_ = x[PERF_RECORD_ITRACE_START-12]
	_ = x[PERF_RECORD_LOST_SAMPLES-13]
	_ = x[PERF_RECORD_SWITCH-14]
	_ = x[PERF_RECORD_SWITCH_CPU_WIDE-15]
	_ = x[PERF_RECORD_NAMESPACES-16]
	_ = x[PERF_RECORD_KSYMBOL-17]
	_ = x[PERF_RECORD_BPF_EVENT-18]
	_ = x[PERF_RECORD_CGROUP-19]
	_ = x[PERF_RECORD_TEXT_POKE-20]
	_ = x[PERF_RECORD_AUX_OUTPUT_HW_ID-21]
	_ = x[PERF_RECORD_HEADER_ATTR-64]
	_ = x[PERF_RECORD_HEADER_EVENT_TYPE-65]
	_ = x[PERF_RECORD_HEADER_TRACING_DATA-66]
	_ = x[PERF_RECORD_HEADER_BUILD_ID-67]
	_ = x[PERF_RECORD_FINISHED_ROUND-68]
	_ = x[PERF_RECORD_ID_INDEX-69]
	_ = x[PERF_RECORD_AUXTRACE_INFO-70]
	_ = x[PERF_RECORD_AUXTRACE-71]
	_ = x[PERF_RECORD_AUXTRACE_ERROR-72]
	_ = x[PERF_RECORD_THREAD_MAP-73]
	_ = x[PERF_RECORD_CPU_MAP-74]
	_ = x[PERF_RECORD_STAT_CONFIG-75]
	_ = x[PERF_RECORD_STAT-76]
	_ = x[PERF_RECORD_STAT_ROUND-77]
	_ = x[PERF_RECORD_EVENT_UPDATE-78]
	_ = x[PERF_RECORD_TIME_CONV-79]
	_ = x[PERF_RECORD_HEADER_FEATURE-80]
	_ = x[PERF_RECORD_COMPRESSED-81]
	_ = x[PERF_RECORD_FINISHED_INIT-82]
}

const (
	_RecordType_name_0 = "PERF_RECORD_MMAPPERF_RECORD_LOSTPERF_RECORD_COMMPERF_RECORD_EXITPERF_RECORD_THROTTLEPERF_RECORD_UNTHROTTLEPERF_RECORD_FORKPERF_RECORD_READPERF_RECORD_SAMPLEPERF_RECORD_MMAP2PERF_RECORD_AUXPERF_RECORD_ITRACE_STARTPERF_RECORD_LOST_SAMPLESPERF_RECORD_SWITCHPERF_RECORD_SWITCH_CPU_WIDEPERF_RECORD_NAMESPACESPERF_RECORD_KSYMBOLPERF_RECORD_BPF_EVENTPERF_RECORD_CGROUPPERF_RECORD_TEXT_POKEPERF_RECORD_AUX_OUTPUT_HW_ID"
	_RecordType_name_1 = "PERF_RECORD_HEADER_ATTRPERF_RECORD_HEADER_EVENT_TYPEPERF_RECORD_HEADER_TRACING_DATAPERF_RECORD_HEADER_BUILD_IDPERF_RECORD_FINISHED_ROUNDPERF_RECORD_ID_INDEXPERF_RECORD_AUXTRACE_INFOPERF_RECORD_AUXTRACEPERF_RECORD_AUXTRACE_ERRORPERF_RECORD_THREAD_MAPPERF_RECORD_CPU_MAPPERF_RECORD_STAT_CONFIGPERF_RECORD_STATPERF_RECORD_STAT_ROUNDPERF_RECORD_EVENT_UPDATEPERF_RECORD_TIME_CONVPERF_RECORD_HEADER_FEATUREPERF_RECORD_COMPRESSEDPERF_RECORD_FINISHED_INIT"
)

var (
	_RecordType_index_0 = [...]uint16{0, 16, 32, 48, 64, 84, 106, 122, 138, 156, 173, 188, 212, 236, 254, 281, 303, 322, 343, 361, 382, 410}
	_RecordType_index_1 = [...]uint16{0, 23, 52, 83, 110, 136, 156, 181, 201, 227, 249, 268, 291, 307, 329, 353, 374, 400, 422, 447}
)

func (i RecordType) String() string {
	switch {
	case 1 <= i && i <= 21:
		i -= 1
		return _RecordType_name_0[_RecordType_index_0[i]:_RecordType_index_0[i+1]]
	case 64 <= i && i <= 82:
		i -= 64
		return _RecordType_name_1[_RecordType_index_1[i]:_RecordType_index_1[i+1]]
	default:
		return "RecordType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERF_TYPE_HARDWARE-0]
	_ = x[PERF_TYPE_SOFTWARE-1]
	_ = x[PERF_TYPE_TRACEPOINT-2]
	_ = x[PERF_TYPE_HW_CACHE-3]
	_ = x[PERF_TYPE_RAW-4]
	_ = x[PERF_TYPE_BREAKPOINT-5]
}

const _eventType_name = "PERF_TYPE_HARDWAREPERF_TYPE_SOFTWAREPERF_TYPE_TRACEPOINTPERF_TYPE_HW_CACHEPERF_TYPE_RAWPERF_TYPE_BREAKPOINT"

var _eventType_index = [...]uint8{0, 18, 36, 56, 74, 87, 107}

func (i eventType) String() string {
	if i >= eventType(len(_eventType_index)-1) {
		return "eventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _eventType_name[_eventType_index[i]:_eventType_index[i+1]]
}
